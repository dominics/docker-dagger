version: '2.4'

services:
  traefik:
    image: traefik:1.7
    command: --api --docker
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/etc/traefik/traefik.toml
      - ./ssl:/etc/traefik/ssl
    labels:
      traefik.frontend.rule: Host:traefik.media.varspool.com
      traefik.port:          8080

  ca:
    image: nginx
    volumes:
      - ./ssl/minica.pem:/usr/share/nginx/html/media-server-ca.crt:ro
      - ./ssl/index.html:/usr/share/nginx/html/index.html:ro
    labels:
      traefik.frontend.rule: Host:ca.media.varspool.com

  sonarr:
    image: linuxserver/sonarr
    ports:
      - "8989:8989"
    volumes:
      - ${CONFIG_DIR:?Need to set CONFIG_DIR}/sonarr:/config
      - ${STORAGE_DIR:?Need to set STORAGE_DIR}/tv:/tv
      - ${STORAGE_DIR}/downloads:/downloads
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ:   ${TZ:?Need to set TZ}
    labels:
      traefik.frontend.rule: Host:sonarr.media.varspool.com

  radarr:
    image: linuxserver/radarr
    ports:
      - "7878:7878"
    volumes:
      - ${CONFIG_DIR}/radarr:/config
      - ${STORAGE_DIR}/movies:/movies
      - ${STORAGE_DIR}/downloads:/downloads
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ:   ${TZ}
    labels:
      traefik.frontend.rule: Host:radarr.media.varspool.com

  nzbget:
    image: linuxserver/nzbget
    ports:
      - "6789:6789"
    volumes:
      - ${CONFIG_DIR}/nzbget:/config
      - ${STORAGE_DIR}/downloads:/downloads
      - ${STORAGE_DIR}/intermediate:/intermediate
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ:   ${TZ}
    labels:
      traefik.frontend.rule: Host:nzbget.media.varspool.com

  ombi:
    image: linuxserver/ombi
    ports:
      - "3579:3579"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ:   ${TZ}
    volumes:
      - ${CONFIG_DIR}/ombi:/config
    labels:
      traefik.frontend.rule: Host:ombi.media.varspool.com

  shinobi:
    image: shinobicctv/shinobi:latest
    shm_size: "256mb"
    ports:
     - "6565:8080"
    environment:
      APP_BRANCH: dev
      PASSWORD_HASH: sha256
    volumes:
      - ${CONFIG_DIR}/shinobi/config:/config
      - ${CONFIG_DIR}/shinobi/autoload:/customAutoload
      - ${CONFIG_DIR}/shinobi/db:/var/lib/mysql
      - ${STORAGE_DIR}/shinobi/videos:/opt/shinobi/videos
    labels:
      traefik.frontend.rule: Host:shinobi.media.varspool.com

 # These containers run in host network mode, which means they don't share a
 # network with the Traefik container. This means the Traefik Docker
 # configuration is completely useless for routing to them, and you
 # have to statically define front/backends in the traefik.toml

  plex:
    image: linuxserver/plex
    network_mode: "host"
    volumes:
      - ${CONFIG_DIR}/plex:/config
      - ${STORAGE_DIR}/movies:/data/movies
      - ${STORAGE_DIR}/tv:/data/tv
      - ${STORAGE_DIR}/transcode:/transcode
      - /dev/dri:/dev/dri
    environment:
      VERSION: latest
      PUID: ${PUID}
      PGID: ${PGID}

  home:
    image: homeassistant/home-assistant:stable
    network_mode: "host"
    volumes:
      - ${CONFIG_DIR}/home-assistant:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
