version: '2.4'

services:
  traefik:
    image: traefik:1.7
    command: --api --docker
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/etc/traefik/traefik.toml
      - ./ssl:/etc/traefik/ssl
    labels:
      traefik.frontend.rule: Host:traefik.media.varspool.com
      traefik.port:          8080

  ca:
    image: nginx
    volumes:
      - ./ssl/minica.pem:/usr/share/nginx/html/media-server-ca.crt:ro
      - ./ssl/index.html:/usr/share/nginx/html/index.html:ro
    labels:
      traefik.frontend.rule: Host:ca.media.varspool.com

  sonarr:
    image: linuxserver/sonarr
    ports:
      - "8989:8989"
    volumes:
      - ${CONFIG_DIR:?Need to set CONFIG_DIR}/sonarr:/config
      - ${STORAGE_DIR:?Need to set STORAGE_DIR}/tv:/tv
      - ${STORAGE_DIR}/downloads:/downloads
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ:   ${TZ:?Need to set TZ}
    labels:
      traefik.frontend.rule: Host:sonarr.media.varspool.com

  radarr:
    image: linuxserver/radarr
    ports:
      - "7878:7878"
    volumes:
      - ${CONFIG_DIR}/radarr:/config
      - ${STORAGE_DIR}/movies:/movies
      - ${STORAGE_DIR}/downloads:/downloads
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ:   ${TZ}
    labels:
      traefik.frontend.rule: Host:radarr.media.varspool.com

  nzbget:
    image: linuxserver/nzbget
    ports:
      - "6789:6789"
    volumes:
      - ${CONFIG_DIR}/nzbget:/config
      - ${STORAGE_DIR}/downloads:/downloads
      - ${STORAGE_DIR}/intermediate:/intermediate
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ:   ${TZ}
    labels:
      traefik.frontend.rule: Host:nzbget.media.varspool.com

 # These containers run in host network mode, which means they don't share a
 # network with the Traefik container. This means the Traefik Docker
 # configuration is completely useless for routing to them, and you
 # have to statically define front/backends in the traefik.toml

  plex:
    image: linuxserver/plex
    runtime: nvidia
    network_mode: "host"
    volumes:
      - ${CONFIG_DIR}/plex:/config
      - ${STORAGE_DIR}/movies:/data/movies
      - ${STORAGE_DIR}/tv:/data/tv
      - ${STORAGE_DIR}/transcode:/transcode
      - /dev/dri:/dev/dri
    environment:
      VERSION: latest
      PUID: ${PUID}
      PGID: ${PGID}
      NVIDIA_VISIBLE_DEVICES: 1

  home:
    image: homeassistant/home-assistant:stable
    network_mode: "host"
    volumes:
      - ${CONFIG_DIR}/home-assistant:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped

  miner:
    image: ptrfrll/nv-docker-trex@sha256:bcb3bc8dc06c4aaa559e190b68db16c79185e580f2a315270b53c58c19a25f53
    command: >
      ./t-rex
      -c /config/config.json
      -a ethash
      -o stratum+ssl://us2.ethermine.org:5555
      -u "0x44BC65DB94D8693025f710fe832B415F9E591ee1"
      -w dagger
      --temperature-limit 90
      --temperature-start 70
      --fan t:80
      --api-bind-http 0.0.0.0:4067
      --api-bind-telnet 0
    runtime: nvidia
    ports:
      - "100.87.71.30:4067:4067"
    volumes:
      - ${CONFIG_DIR}/trex:/config
    environment:
      NVIDIA_VISIBLE_DEVICES: 0
    labels:
      traefik.frontend.rule: Host:trex.media.varspool.com

#  schedule:
#    image: ptrfrll/nv-docker-trex@sha256:bcb3bc8dc06c4aaa559e190b68db16c79185e580f2a315270b53c58c19a25f53
#    command: bash -c "sleep infinity"
#    network_mode: "host"
#    labels:
#      ofelia.enabled: "true"
#      ofelia.job-exec.weekday-peak-1-begins.schedule: "0 0 7 * * 1-5" # 7am weekdays
#      ofelia.job-exec.weekday-peak-1-begins.command:  "wget -q -t 1 -T 1 http://100.97.14.14:4067/control?pause=true || wget -q -t 1 -T 1 http://100.87.71.30:4067/control?pause=true"
#      ofelia.job-exec.weekday-peak-1-ends.schedule:   "0 0 11 * * 1-5" # 11am weekdays
#      ofelia.job-exec.weekday-peak-1-ends.command:    "wget -q -t 1 -T 1 http://100.97.14.14:4067/control?pause=false || wget -q -t 1 -T 1 http://100.87.71.30:4067/control?pause=false"
#      ofelia.job-exec.weekday-peak-2-begins.schedule: "0 0 17 * * 1-5" # 5pm weekdays
#      ofelia.job-exec.weekday-peak-2-begins.command:  "wget -q -t 1 -T 1 http://100.97.14.14:4067/control?pause=true ||  wget -q -t 1 -T 1 http://100.87.71.30:4067/control?pause=true"
#      ofelia.job-exec.weekday-peak-2-ends.schedule:   "0 0 21 * * 1-5" # 9pm weekdays
#      ofelia.job-exec.weekday-peak-2-ends.command:    "wget -q -t 1 -T 1 http://100.97.14.14:4067/control?pause=false || wget -q -t 1 -T 1 http://100.87.71.30:4067/control?pause=false"

  cron:
    image: mcuadros/ofelia:latest
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: "Pacific/Auckland"
